@startuml "entidad_relacion"

' Configuraci칩n visual
skinparam roundcorner 15
skinparam shadowing true
skinparam linetype ortho

entity Deposito <<Transporte>> {
    * idDeposito : int <<PK>>
    * nombre : string
    * direccion : string
    * latitud : decimal(10,8)
    * longitud : decimal(11,8)
    * costoEstadiaDiario : float
}

entity Contenedor <<Cliente>> {
    * idContenedor : int <<PK>>
    * peso : float
    * volumen : float
    * estado : string <<ENUM>> (en_origen, en_transito, en_deposito, entregado)
    * ubicacionActual : string  ' Descripci칩n textual del lugar actual
    * activo : boolean  ' Si est치 disponible para nuevas solicitudes
    * idCliente : int <<FK>>
}

entity Solicitud <<Cliente>> {
    * idSolicitud : int <<PK>>
    * idContenedor : int <<FK>>
    * idCliente : int <<FK>>
    * idTarifa : int (nullable) (referecia logica a ms_transportista)
    * origen_direccion : string
    * origen_latitud : decimal(10,8)
    * origen_longitud : decimal(11,8)
    * destino_direccion : string
    * destino_latitud : decimal(10,8)
    * destino_longitud : decimal(11,8)
    * costoEstimado : float
    * tiempoEstimado : float
    * costoFinal : float
    * tiempoReal : float
    * fechaCreacion : datetime
    * fechaActualizacion : datetime
    * estado : string <<ENUM>> (borrador, programada, asignada, en_transito, en_deposito, entregada, cancelada)
}

entity Ruta <<Transporte>> {
    * idRuta : int <<PK>>
    * idSolicitud : int (referecia logica a ms_cliente)
    * cantidadTramos : int
    * cantidadDepositos : int
    * distanciaTotal : float
    * estado : string <<ENUM>> (estimada, asignada, en_progreso, completada)
}

entity Tramo <<Transporte>> {
    * idTramo : int <<PK>>
    * idRuta : int <<FK>>
    * idDepositoOrigen : int <<FK>> (nullable)
    * idDepositoDestino : int <<FK>> (nullable)
    * keyCloakIdTransportista : int (referecia logica a UsuarioKeycloak)
    * dominioCamion : string <<FK>>  ' Cami칩n asignado
    * tipo : string <<ENUM>> (origen-deposito, deposito-deposito, deposito-destino, origen-destino)
    * estado : string <<ENUM>> (planificado, asignado, iniciado, finalizado, cancelado)
    * distancia : float
    * costoAproximado : float
    * costoReal : float
    * fechaHoraInicioEstimada : datetime
    * fechaHoraFinEstimada : datetime
    * fechaHoraInicio : datetime (nullable)
    * fechaHoraFin : datetime (nullable)
    * fechaActualizacion : datetime
}

entity Camion <<Transporte>>{
    * dominio : string <<PK>>
    * capacidadPeso : float
    * capacidadVolumen : float
    * disponibilidad : boolean
    * costoBaseKm : float
    * consumoCombustible : float
}

entity Cliente <<Cliente>> {
    * idCliente : int <<PK>>
    * keyCloakId : int (referecia logica a UsuarioKeycloak)
    * direccionFacturacion : string
    * direccionEnvio : string
    * razonSocial : string  ' Si es empresa
    * cuit : string  ' Si es empresa
}

entity Tarifa <<Transporte>> {
    * idTarifa : int <<PK>>
    * concepto : string
    * valorBase : float
    * valorPorKm : float
    * valorPorPeso : float
    * valorPorVolumen : float
    * valorPorTramo : float
    * valorLitroCombustible : float
    * fechaVigencia : date
    * activo : boolean
}

entity UsuarioKeycloak <<Keycloak>> {
    * idUsuario : int <<PK>>
    * nombre : string
    * apellido : string
    * telefono : string
    * email : string
    * username : string
    * password : string
    * rol : string <<ENUM>> (cliente, operador, transportista)
    * activo : boolean
}

' Relaciones
Cliente ||--o{ Contenedor 
Cliente ||--o{ Solicitud 
Cliente }o--|| UsuarioKeycloak
Contenedor ||--o{ Solicitud 
Solicitud ||--o| Ruta
Ruta ||--o{ Tramo 

' Preguntar si pueden haber dos
Tramo }o--o| Deposito : origen 
Tramo }o--o| Deposito : destino 

Tramo }o--o| Camion : "usa"
Tarifa }|--o{ Solicitud 

Tramo }o--o| UsuarioKeycloak : "realizado por"

@enduml

